name: Releases

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "src/**"
  pull_request:
    branches:
      - main

jobs:
  release:
    name: Build, test, and release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build

      - name: Run tests
        continue-on-error: true
        run: bun run test

      - name: Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          #           NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com
        run: bunx semantic-release

      - name: Publish to GitHub Marketplace
        if: success()
        run: |
          gh api \
            --method POST \
            /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/pending_deployments \
            -f environment=marketplace \
            -f state=approved
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
