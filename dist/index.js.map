{"version":3,"file":"index.js","mappingsoKA;AAoJA;AA0CA;AA9XA;AACA;AACA;AACA;AACA;AAwBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAMA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACndA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AE7BA;AACA;AACA;AACA","sources":[".././src/index.ts","../webpack/bootstrap","../webpack/before-startup","../webpack/startup","../webpack/after-startup"],"sourcesContent":["import * as core from '@actions/core'\r\nimport * as github from '@actions/github'\r\nimport * as fs from 'fs'\r\nimport * as path from 'path'\r\nimport * as yaml from 'js-yaml'\r\n\r\ninterface LinkReplace {\r\n  old: string\r\n  new: string\r\n}\r\n\r\ninterface LinkChange {\r\n  file: string\r\n  oldLink: string\r\n  newLink: string\r\n}\r\n\r\ninterface Config {\r\n  paths: string[]\r\n  fileTypes: string[]\r\n  links: LinkReplace[]\r\n  ignore: string[]\r\n  githubUrls?: {\r\n    types: Array<'username' | 'repo' | 'sponsors' | 'all'>\r\n  }\r\n  createPr?: boolean\r\n}\r\n\r\nexport function parseConfig(configPath: string): Config {\r\n  try {\r\n    if (!fs.existsSync(configPath)) {\r\n      throw new Error(`Configuration file not found at ${configPath}`)\r\n    }\r\n\r\n    const fileContent = fs.readFileSync(configPath, 'utf8')\r\n    const config = yaml.load(fileContent) as Config\r\n\r\n    return {\r\n      paths: config.paths || ['.'],\r\n      fileTypes: config.fileTypes || ['md'],\r\n      links: (config.links || []).map(link => ({\r\n        old: link.old,\r\n        new: processTemplate(link.new),\r\n      })),\r\n      ignore: config.ignore || [],\r\n      githubUrls: config.githubUrls || { types: [] },\r\n    }\r\n  } catch (error) {\r\n    throw new Error(`Error parsing configuration: ${error}`)\r\n  }\r\n}\r\n\r\nfunction processTemplate(value: string): string {\r\n  if (typeof value !== 'string') return value\r\n\r\n  // Replace GitHub-specific variables\r\n  if (value.includes('${{ github.repository }}')) {\r\n    return `https://github.com/${github.context.repo.owner}/${github.context.repo.repo}`\r\n  }\r\n\r\n  // Replace secrets\r\n  return value.replace(/\\${{[\\s]*secrets\\.([\\w]+)[\\s]*}}/g, (_, key) => {\r\n    const envValue = process.env[key]\r\n    return envValue || ''\r\n  })\r\n}\r\n\r\n// Regular expressions for different GitHub URL patterns\r\nconst GITHUB_URL_PATTERNS = {\r\n  username: /https?:\\/\\/github\\.com\\/([a-zA-Z0-9-]+)(?!\\/)(?:\\s|$)/g,\r\n  repo: /https?:\\/\\/github\\.com\\/([a-zA-Z0-9-]+)\\/([a-zA-Z0-9-_.]+)(?:\\/[^)\\s]*)?/g,\r\n  sponsors: /https?:\\/\\/github\\.com\\/sponsors\\/([a-zA-Z0-9-]+)/g,\r\n  // Updated all pattern to capture the full structure\r\n  all: /https?:\\/\\/github\\.com(?:\\/[^)\\s${}\\n]*)?/g,\r\n}\r\n\r\n// Helper function to detect if URL is a template literal\r\nfunction isTemplateLiteral(str: string): boolean {\r\n  return /\\${[^}]*}/.test(str)\r\n}\r\n\r\n// Helper function to determine URL type\r\nfunction getUrlType(url: string): 'username' | 'repo' | 'sponsors' | null {\r\n  if (url.includes('/sponsors/')) return 'sponsors'\r\n  const parts = url.split('/').filter(Boolean)\r\n  if (parts.length >= 4) return 'repo'\r\n  if (parts.length === 3 && !url.endsWith('/')) return 'username'\r\n  return null\r\n}\r\n\r\nfunction processGitHubUrls(\r\n  content: string,\r\n  types: Array<'username' | 'repo' | 'sponsors' | 'all'>,\r\n  ignore: string[],\r\n  context: typeof github.context\r\n): string {\r\n  let updatedContent = content\r\n  const { owner, repo } = context.repo\r\n\r\n  // Process each URL type based on configuration\r\n  for (const type of types) {\r\n    const pattern = GITHUB_URL_PATTERNS[type]\r\n\r\n    updatedContent = updatedContent.replace(pattern, match => {\r\n      // Skip if URL is in ignore list or contains template literals\r\n      if (\r\n        ignore.some(ignoreUrl => match.includes(ignoreUrl)) ||\r\n        isTemplateLiteral(match)\r\n      ) {\r\n        return match\r\n      }\r\n\r\n      // For 'all' type, determine the actual URL type first\r\n      if (type === 'all') {\r\n        const urlType = getUrlType(match)\r\n        if (!urlType) return match // Skip if we can't determine the type\r\n\r\n        switch (urlType) {\r\n          case 'sponsors':\r\n            const sponsorMatch = match.match(/sponsors\\/([a-zA-Z0-9-]+)/)\r\n            if (sponsorMatch && sponsorMatch[1] !== owner) {\r\n              return match.replace(sponsorMatch[1], owner)\r\n            }\r\n            break\r\n\r\n          case 'repo':\r\n            const repoMatch = match.match(\r\n              /github\\.com\\/([a-zA-Z0-9-]+)\\/([a-zA-Z0-9-_.]+)/\r\n            )\r\n            if (\r\n              repoMatch &&\r\n              (repoMatch[1] !== owner || repoMatch[2] !== repo)\r\n            ) {\r\n              const subpath = match.slice(\r\n                match.indexOf(repoMatch[2]) + repoMatch[2].length\r\n              )\r\n              return `https://github.com/${owner}/${repo}${subpath}`\r\n            }\r\n            break\r\n\r\n          case 'username':\r\n            const usernameMatch = match.match(\r\n              /github\\.com\\/([a-zA-Z0-9-]+)(?!\\/)/\r\n            )\r\n            if (usernameMatch && usernameMatch[1] !== owner) {\r\n              return match.replace(usernameMatch[1], owner)\r\n            }\r\n            break\r\n        }\r\n      } else {\r\n        // Original type-specific processing\r\n        switch (type) {\r\n          case 'username':\r\n            const usernameMatch = match.match(/github\\.com\\/([a-zA-Z0-9-]+)/)\r\n            if (usernameMatch && usernameMatch[1] !== owner) {\r\n              return match.replace(usernameMatch[1], owner)\r\n            }\r\n            break\r\n\r\n          case 'repo':\r\n            const repoMatch = match.match(\r\n              /github\\.com\\/([a-zA-Z0-9-]+)\\/([a-zA-Z0-9-_.]+)/\r\n            )\r\n            if (\r\n              repoMatch &&\r\n              (repoMatch[1] !== owner || repoMatch[2] !== repo)\r\n            ) {\r\n              const subpath = match.slice(\r\n                match.indexOf(repoMatch[2]) + repoMatch[2].length\r\n              )\r\n              return `https://github.com/${owner}/${repo}${subpath}`\r\n            }\r\n            break\r\n\r\n          case 'sponsors':\r\n            const sponsorMatch = match.match(/sponsors\\/([a-zA-Z0-9-]+)/)\r\n            if (sponsorMatch && sponsorMatch[1] !== owner) {\r\n              return match.replace(sponsorMatch[1], owner)\r\n            }\r\n            break\r\n        }\r\n      }\r\n\r\n      return match\r\n    })\r\n  }\r\n\r\n  return updatedContent\r\n}\r\n\r\nlet linkChanges: LinkChange[] = []\r\n\r\nexport function updateContent(\r\n  content: string,\r\n  config: Config,\r\n  filePath: string\r\n): string {\r\n  let updatedContent = content\r\n\r\n  // Process GitHub URLs if configured\r\n  if ((config.githubUrls?.types ?? []).length > 0) {\r\n    const originalContent = updatedContent\r\n    updatedContent = processGitHubUrls(\r\n      updatedContent,\r\n      config.githubUrls?.types ?? [],\r\n      config.ignore,\r\n      github.context\r\n    )\r\n\r\n    // Track GitHub URL changes\r\n    if (originalContent !== updatedContent) {\r\n      const { owner, repo } = github.context.repo\r\n      // Use regex to find all GitHub URLs that were changed\r\n      const urlMatches = originalContent.matchAll(GITHUB_URL_PATTERNS.all)\r\n      for (const match of urlMatches) {\r\n        const oldUrl = match[0]\r\n        if (!config.ignore.includes(oldUrl)) {\r\n          const newUrl = oldUrl.replace(\r\n            /github\\.com\\/([a-zA-Z0-9-]+)(?:\\/([a-zA-Z0-9-_.]+))?/,\r\n            `github.com/${owner}${match[0].includes('/') ? `/${repo}` : ''}`\r\n          )\r\n          if (oldUrl !== newUrl) {\r\n            linkChanges.push({\r\n              file: filePath,\r\n              oldLink: oldUrl,\r\n              newLink: newUrl,\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Process regular link replacements\r\n  for (const link of config.links) {\r\n    if (config.ignore.includes(link.old)) {\r\n      continue\r\n    }\r\n    const regex = new RegExp(escapeRegExp(link.old), 'g')\r\n    const originalContent = updatedContent\r\n    updatedContent = updatedContent.replace(regex, link.new)\r\n\r\n    // Track regular link changes\r\n    if (originalContent !== updatedContent) {\r\n      linkChanges.push({\r\n        file: filePath,\r\n        oldLink: link.old,\r\n        newLink: link.new,\r\n      })\r\n    }\r\n  }\r\n\r\n  return updatedContent\r\n}\r\n\r\nfunction escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\r\n}\r\n\r\nfunction generatePrBody(): string {\r\n  if (linkChanges.length === 0) {\r\n    return 'No links were changed in this update.'\r\n  }\r\n\r\n  // Group changes by file\r\n  const changesByFile = linkChanges.reduce(\r\n    (acc, change) => {\r\n      if (!acc[change.file]) {\r\n        acc[change.file] = []\r\n      }\r\n      acc[change.file].push(change)\r\n      return acc\r\n    },\r\n    {} as Record<string, LinkChange[]>\r\n  )\r\n\r\n  let body = '## Link Updates\\n\\n'\r\n\r\n  // Add summary\r\n  body += `This PR updates ${linkChanges.length} link${linkChanges.length === 1 ? '' : 's'} across ${Object.keys(changesByFile).length} file${Object.keys(changesByFile).length === 1 ? '' : 's'}.\\n\\n`\r\n\r\n  // Add details for each file\r\n  for (const [file, changes] of Object.entries(changesByFile)) {\r\n    body += `### ${file}\\n`\r\n    for (const change of changes) {\r\n      body += `- \\`${change.oldLink}\\` → \\`${change.newLink}\\`\\n`\r\n    }\r\n    body += '\\n'\r\n  }\r\n\r\n  body += '---\\n'\r\n  body += '_This PR was automatically generated by the LinkApp Action._'\r\n\r\n  return body\r\n}\r\n\r\nasync function createPullRequest(\r\n  octokit: ReturnType<typeof github.getOctokit>,\r\n  branchName: string\r\n): Promise<void> {\r\n  const { owner, repo } = github.context.repo\r\n\r\n  const prTitle = '🔗 chore: update repository links'\r\n  const prBody = generatePrBody()\r\n\r\n  try {\r\n    const response = await octokit.rest.pulls.create({\r\n      owner,\r\n      repo,\r\n      title: prTitle,\r\n      body: prBody,\r\n      head: branchName,\r\n      base: 'main',\r\n    })\r\n\r\n    core.info(\r\n      `✨ Created PR #${response.data.number}: ${response.data.html_url}`\r\n    )\r\n  } catch (error) {\r\n    throw new Error(`Failed to create PR: ${error}`)\r\n  }\r\n}\r\n\r\nasync function updateFile(filePath: string, config: Config): Promise<boolean> {\r\n  try {\r\n    const content = fs.readFileSync(filePath, 'utf8')\r\n    const updatedContent = updateContent(content, config, filePath)\r\n\r\n    if (content !== updatedContent) {\r\n      fs.writeFileSync(filePath, updatedContent)\r\n      core.info(`✅ Updated ${filePath}`)\r\n      return true\r\n    }\r\n    return false\r\n  } catch (error) {\r\n    core.warning(`⚠️ Error updating ${filePath}: ${error}`)\r\n    return false\r\n  }\r\n}\r\n\r\nexport async function processDirectory(\r\n  dirPath: string,\r\n  config: Config\r\n): Promise<boolean> {\r\n  let hasChanges = false\r\n  const entries = fs.readdirSync(dirPath, { withFileTypes: true })\r\n\r\n  for (const entry of entries) {\r\n    const fullPath = path.join(dirPath, entry.name)\r\n\r\n    if (entry.isDirectory()) {\r\n      // Skip .git directory and node_modules\r\n      if (entry.name === '.git' || entry.name === 'node_modules') continue\r\n      hasChanges = (await processDirectory(fullPath, config)) || hasChanges\r\n    } else if (entry.isFile()) {\r\n      const ext = path.extname(entry.name).replace('.', '')\r\n      if (config.fileTypes.includes(ext)) {\r\n        const fileChanged = await updateFile(fullPath, config)\r\n        hasChanges = hasChanges || fileChanged\r\n      }\r\n    }\r\n  }\r\n\r\n  return hasChanges\r\n}\r\n\r\nasync function exec(command: string, args: string[]): Promise<string> {\r\n  const { exec } = require('@actions/exec')\r\n  let output = ''\r\n\r\n  const options = {\r\n    listeners: {\r\n      stdout: (data: Buffer) => {\r\n        output += data.toString()\r\n      },\r\n    },\r\n  }\r\n\r\n  await exec(command, args, options)\r\n  return output.trim()\r\n}\r\n\r\nexport async function run(): Promise<void> {\r\n  try {\r\n    // Reset linkChanges at the start of each run\r\n    linkChanges = []\r\n\r\n    // Get inputs\r\n    const token = core.getInput('token')\r\n    const configPath = core.getInput('config-path')\r\n\r\n    if (!token) {\r\n      throw new Error('GitHub token not found')\r\n    }\r\n\r\n    // Initialize octokit\r\n    const octokit = github.getOctokit(token)\r\n\r\n    // Parse configuration\r\n    const config = parseConfig(configPath)\r\n\r\n    core.info('📝 Starting link updates with configuration:')\r\n    core.info(`Paths: ${config.paths.join(', ')}`)\r\n    core.info(`File Types: ${config.fileTypes.join(', ')}`)\r\n    core.info(`Number of link replacements: ${config.links.length}`)\r\n    core.info(`Mode: ${config.createPr ? 'Pull Request' : 'Direct Commit'}`)\r\n\r\n    let hasChanges = false\r\n\r\n    // Process each configured path\r\n    for (const configPath of config.paths) {\r\n      const absolutePath = path.resolve(process.cwd(), configPath)\r\n      if (fs.existsSync(absolutePath)) {\r\n        const pathChanges = await processDirectory(absolutePath, config)\r\n        hasChanges = hasChanges || pathChanges\r\n      } else {\r\n        core.warning(`⚠️ Path not found: ${configPath}`)\r\n      }\r\n    }\r\n\r\n    if (hasChanges) {\r\n      // Configure git\r\n      await exec('git', [\r\n        'config',\r\n        '--local',\r\n        'user.email',\r\n        'action@github.com',\r\n      ])\r\n      await exec('git', ['config', '--local', 'user.name', 'GitHub Action'])\r\n\r\n      // Add changes\r\n      await exec('git', ['add', '.'])\r\n\r\n      if (config.createPr) {\r\n        // Create a new branch for PR\r\n        const branchName = `link-updates-${Date.now()}`\r\n        await exec('git', ['checkout', '-b', branchName])\r\n\r\n        // Commit changes\r\n        await exec('git', ['commit', '-m', '🔗 chore: update repository links'])\r\n\r\n        // Push branch\r\n        await exec('git', ['push', 'origin', branchName])\r\n\r\n        // Create PR with detailed changes\r\n        await createPullRequest(octokit, branchName)\r\n\r\n        core.info('✨ Successfully created PR with link updates!')\r\n      } else {\r\n        // Commit directly to main\r\n        await exec('git', ['commit', '-m', '🔗 chore: update repository links'])\r\n        await exec('git', ['push'])\r\n\r\n        core.info('✨ Successfully updated links and pushed changes to main!')\r\n      }\r\n    } else {\r\n      core.info('ℹ️ No changes were needed')\r\n    }\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      core.setFailed(error.message)\r\n    } else {\r\n      core.setFailed('An unexpected error occurred')\r\n    }\r\n  }\r\n}\r\n\r\nrun()\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(9407);\n",""],"names":[],"sourceRoot":""}